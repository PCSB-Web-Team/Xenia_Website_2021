[{"E:\\amit\\xenia-dashboard\\src\\index.js":"1","E:\\amit\\xenia-dashboard\\src\\Store\\Store.js":"2","E:\\amit\\xenia-dashboard\\src\\App.js":"3","E:\\amit\\xenia-dashboard\\src\\Store\\Reducer.js":"4","E:\\amit\\xenia-dashboard\\src\\Store\\Actions.js":"5","E:\\amit\\xenia-dashboard\\src\\Components\\404\\404.js":"6","E:\\amit\\xenia-dashboard\\src\\Components\\BackGround\\Background.js":"7","E:\\amit\\xenia-dashboard\\src\\Components\\Navbar\\Navbar.js":"8","E:\\amit\\xenia-dashboard\\src\\Components\\Registrations\\Registrations.js":"9","E:\\amit\\xenia-dashboard\\src\\Components\\LandingPage\\LandingPage.js":"10","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\Events.js":"11","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\MoreInfo.js":"12","E:\\amit\\xenia-dashboard\\src\\Components\\Contact\\Contact.js":"13","E:\\amit\\xenia-dashboard\\src\\Components\\Footer\\Footer.js":"14","E:\\amit\\xenia-dashboard\\src\\Components\\WebTeam\\WebTeam.js":"15","E:\\amit\\xenia-dashboard\\src\\Components\\Profile\\Profile.js":"16","E:\\amit\\xenia-dashboard\\src\\Components\\SideEvents\\SideEvents.js":"17","E:\\amit\\xenia-dashboard\\src\\Components\\Sponsors\\Sponsors.js":"18","E:\\amit\\xenia-dashboard\\src\\Components\\Contact\\FAQ\\FAQ.js":"19","E:\\amit\\xenia-dashboard\\src\\Components\\ForgotPassword\\reset.js":"20","E:\\amit\\xenia-dashboard\\src\\Components\\ForgotPassword\\forgot.js":"21","E:\\amit\\xenia-dashboard\\src\\Components\\AboutUs\\About.js":"22","E:\\amit\\xenia-dashboard\\src\\Components\\Config\\api\\User.js":"23","E:\\amit\\xenia-dashboard\\src\\Store\\DefaultState.js":"24","E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\Login.js":"25","E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\Register.js":"26","E:\\amit\\xenia-dashboard\\src\\Components\\WebTeam\\TeamProfile.js":"27","E:\\amit\\xenia-dashboard\\src\\Components\\Registrations\\EventCols\\EventCols.js":"28","E:\\amit\\xenia-dashboard\\src\\Components\\Config\\config.js":"29","E:\\amit\\xenia-dashboard\\src\\Components\\Button\\button.js":"30","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\Cards\\Card.js":"31","E:\\amit\\xenia-dashboard\\src\\Components\\Loader\\Loader.js":"32","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\DetailTabs\\DetailsTabs.js":"33","E:\\amit\\xenia-dashboard\\src\\Components\\Contact\\FAQ\\Question.js":"34","E:\\amit\\xenia-dashboard\\src\\Components\\LandingPage\\LandingPageStars\\LandingPageStars.js":"35","E:\\amit\\xenia-dashboard\\src\\Components\\LandingPage\\Moon\\Moon.js":"36","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\Suggestion\\Suggestion.js":"37","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\Modal\\Modal.js":"38","E:\\amit\\xenia-dashboard\\src\\Components\\Notifications\\Notification.js":"39","E:\\amit\\xenia-dashboard\\src\\Components\\Registrations\\RegOpen\\RegOpen.js":"40","E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\sendEmail.js":"41","E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\validInfo.js":"42"},{"size":596,"mtime":1622552997833,"results":"43","hashOfConfig":"44"},{"size":321,"mtime":1615959889512,"results":"45","hashOfConfig":"44"},{"size":3605,"mtime":1623073010922,"results":"46","hashOfConfig":"44"},{"size":1408,"mtime":1622800704341,"results":"47","hashOfConfig":"44"},{"size":1483,"mtime":1622800704338,"results":"48","hashOfConfig":"44"},{"size":398,"mtime":1622800704282,"results":"49","hashOfConfig":"44"},{"size":318,"mtime":1621471337997,"results":"50","hashOfConfig":"44"},{"size":3422,"mtime":1623073011347,"results":"51","hashOfConfig":"44"},{"size":2630,"mtime":1623073011378,"results":"52","hashOfConfig":"44"},{"size":1959,"mtime":1623073011341,"results":"53","hashOfConfig":"44"},{"size":3151,"mtime":1623073011298,"results":"54","hashOfConfig":"44"},{"size":4978,"mtime":1623073011306,"results":"55","hashOfConfig":"44"},{"size":3752,"mtime":1623077765341,"results":"56","hashOfConfig":"44"},{"size":7303,"mtime":1623073011311,"results":"57","hashOfConfig":"44"},{"size":1897,"mtime":1623073011387,"results":"58","hashOfConfig":"44"},{"size":2731,"mtime":1623081055781,"results":"59","hashOfConfig":"44"},{"size":4328,"mtime":1623073011380,"results":"60","hashOfConfig":"44"},{"size":2824,"mtime":1623073011384,"results":"61","hashOfConfig":"44"},{"size":1679,"mtime":1623073011292,"results":"62","hashOfConfig":"44"},{"size":3558,"mtime":1623078155228,"results":"63","hashOfConfig":"44"},{"size":1885,"mtime":1623073011314,"results":"64","hashOfConfig":"44"},{"size":3207,"mtime":1621471337996,"results":"65","hashOfConfig":"44"},{"size":1215,"mtime":1622802434776,"results":"66","hashOfConfig":"44"},{"size":238,"mtime":1622800704340,"results":"67","hashOfConfig":"44"},{"size":6739,"mtime":1622886668441,"results":"68","hashOfConfig":"44"},{"size":8950,"mtime":1622886668443,"results":"69","hashOfConfig":"44"},{"size":690,"mtime":1622800704335,"results":"70","hashOfConfig":"44"},{"size":700,"mtime":1622552997809,"results":"71","hashOfConfig":"44"},{"size":161,"mtime":1622800704284,"results":"72","hashOfConfig":"44"},{"size":215,"mtime":1622964744908,"results":"73","hashOfConfig":"44"},{"size":816,"mtime":1623073011294,"results":"74","hashOfConfig":"44"},{"size":273,"mtime":1617935790943,"results":"75","hashOfConfig":"44"},{"size":1456,"mtime":1622800704309,"results":"76","hashOfConfig":"44"},{"size":887,"mtime":1622800704291,"results":"77","hashOfConfig":"44"},{"size":332,"mtime":1623073011343,"results":"78","hashOfConfig":"44"},{"size":473,"mtime":1623073011345,"results":"79","hashOfConfig":"44"},{"size":1492,"mtime":1623073011308,"results":"80","hashOfConfig":"44"},{"size":3253,"mtime":1623073011302,"results":"81","hashOfConfig":"44"},{"size":2495,"mtime":1623073011348,"results":"82","hashOfConfig":"44"},{"size":846,"mtime":1622959720522,"results":"83","hashOfConfig":"44"},{"size":1977,"mtime":1622552997612,"results":"84","hashOfConfig":"44"},{"size":1431,"mtime":1622802434772,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"my6gpq",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"E:\\amit\\xenia-dashboard\\src\\index.js",[],["178","179"],"E:\\amit\\xenia-dashboard\\src\\Store\\Store.js",[],"E:\\amit\\xenia-dashboard\\src\\App.js",["180"],"import Navbar from \"./Components/Navbar/Navbar\";\r\nimport Home from \"./Components/LandingPage/LandingPage\";\r\nimport Schedule from \"./Components/Registrations/Registrations\";\r\nimport Events from \"./Components/Events/Events\";\r\nimport EventDetail from \"./Components/Events/MoreInfo/MoreInfo\";\r\nimport AboutUs from \"./Components/AboutUs/About\";\r\nimport ContactUs from \"./Components/Contact/Contact\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport WebTeam from \"./Components/WebTeam/WebTeam\";\r\nimport Sponsors from \"./Components/Sponsors/Sponsors\";\r\nimport { getLoggedInUser } from \"./Components/Config/api/User\";\r\nimport NotFound from \"./Components/404/404\";\r\nimport SideEvents from \"./Components/SideEvents/SideEvents\";\r\nimport FAQ from \"./Components/Contact/FAQ/FAQ\";\r\nimport Background from \"./Components/BackGround/Background\";\r\nimport ForgotPassword from \"./Components/ForgotPassword/forgot\";\r\nimport ResetPassword from \"./Components/ForgotPassword/reset\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { getEventData, loggedIn, storeToken } from \"./Store/Actions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./App.css\";\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      let userToken = localStorage.getItem(\"xeniaUserToken\");\r\n\r\n      const res = await getLoggedInUser(userToken);\r\n\r\n      props.storeToken(userToken);\r\n\r\n      props.loggedIn(res.data.data);\r\n    };\r\n\r\n    setTimeout( () => {\r\n      const PreLoader = document.getElementById('preLoader');\r\n      PreLoader.style.display = 'none';\r\n    }, 6000 )\r\n    getUserData();\r\n  \r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Xenia\" id=\"Xenia\">\r\n      <Navbar />\r\n      <Background />\r\n\r\n      <Switch>\r\n\r\n        <Route exact path=\"/schedule\">\r\n          <Schedule />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/events\">\r\n          <Events />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/events/:id\">\r\n          <EventDetail />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/side-events\">\r\n          <SideEvents />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/profile\">\r\n          {props.login ? (\r\n            <div>\r\n              <Profile />\r\n              <Footer />\r\n            </div>\r\n          ) : (\r\n            <Redirect to=\"/\"></Redirect>\r\n          )}\r\n        </Route>\r\n\r\n        <Route exact path=\"/sponsors\">\r\n          <Sponsors />\r\n          <AboutUs />\r\n          <ContactUs />\r\n          <FAQ />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/webteam\">\r\n          <WebTeam />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route exact path=\"/forgot-password\">\r\n          <ForgotPassword />\r\n        </Route>\r\n\r\n        <Route exact path=\"/reset-password\">\r\n          <ResetPassword />\r\n        </Route>\r\n\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatesToProps = (state) => {\r\n  return {\r\n    login: state.login,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    getEventData: (data) => {\r\n      dispatch(getEventData(data));\r\n    },\r\n    loggedIn: (userdata) => {\r\n      dispatch(loggedIn(userdata));\r\n    },\r\n    storeToken: (token) => {\r\n      dispatch(storeToken(token));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStatesToProps, mapActionsToProps)(App);\r\n","E:\\amit\\xenia-dashboard\\src\\Store\\Reducer.js",[],"E:\\amit\\xenia-dashboard\\src\\Store\\Actions.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\404\\404.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\BackGround\\Background.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Navbar\\Navbar.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Registrations\\Registrations.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\LandingPage\\LandingPage.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Events\\Events.js",["181","182"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"./Cards/Card.css\";\r\nimport \"./Events.css\";\r\nimport Card from \"./Cards/Card\";\r\nimport { getAllEvents } from \"../Config/api/User\";\r\n\r\nconst Events = () => {\r\n  const [eventType, setEventType] = useState(\"tech\");\r\n  const [techEvents, setTech] = useState([]);\r\n  const [nonTechEvents, setNonTech] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await getAllEvents();\r\n\r\n      if (response.data.ok) {\r\n        let tech = [];\r\n        let nonTech = [];\r\n\r\n        tech = response.data.data.filter((eve) => eve.isTechnical);\r\n        nonTech = response.data.data.filter((eve) => !eve.isTechnical);\r\n\r\n        setTech(tech);\r\n        setNonTech(nonTech);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  // const changeEventType = () => {\r\n  //   if (eventType === \"tech\") setEventType(\"nonTech\");\r\n  //   else setEventType(\"tech\");\r\n  // };\r\n\r\n  return (\r\n    <div className=\"events-dashboard\">\r\n    \r\n      <header className=\"page-headers\">\r\n        <h1 className=\"header-name\"> EVENTS </h1>\r\n      </header>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"card-container\">\r\n          <div className=\"tabs\">\r\n            <button\r\n              className={\r\n                eventType === \"tech\" ? \"tabs-btn active-tab\" : \"tabs-btn\"\r\n              }\r\n              onClick={() => setEventType(\"tech\")}\r\n              id=\"tech-tab\"\r\n            >\r\n              Technical\r\n            </button>\r\n            <button\r\n              className={\r\n                eventType !== \"tech\" ? \"tabs-btn active-tab\" : \"tabs-btn\"\r\n              }\r\n              onClick={() => setEventType(\"non-tech\")}\r\n              id=\"non-tech-tab\"\r\n            >\r\n              Non-Technical\r\n            </button>\r\n          </div>\r\n\r\n          {eventType === \"tech\"\r\n            ? techEvents.map((eve) => {\r\n                return (\r\n                  <div key={eve._id} className=\"card-div\">\r\n                    {\" \"}\r\n                    <Link to={`/events/${eve._id}`} onClick={ () => document.documentElement.scrollTop = 0 }>\r\n                      <Card details={eve}></Card>\r\n                    </Link>{\" \"}\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n          {eventType !== \"tech\"\r\n            ? nonTechEvents.map((eve) => {\r\n                return (\r\n                  <div key={eve._id} className=\"card-div\">\r\n                    {\" \"}\r\n                    <Link to={`/events/${eve._id}`} onClick={ () => document.documentElement.scrollTop = 0 }>\r\n                      <Card details={eve}></Card>\r\n                    </Link>{\" \"}\r\n                  </div>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\MoreInfo.js",["183","184","185","186"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./MoreInfo.css\";\r\nimport back2 from \"../../../Assets/Images/arrow-left2.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport ReactLogo from \"../../../Assets/Images/logo.svg\";\r\nimport DetailsTab from \"./DetailTabs/DetailsTabs\";\r\nimport Suggestion from \"./Suggestion/Suggestion\";\r\nimport { openLogin, addToRegistered } from \"../../../Store/Actions\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport { setRegisteredEvents, getEventDetails } from \"../../Config/api/User\";\r\nimport { addToCartFail, registrationsClosed } from \"../../Notifications/Notification\";\r\nimport Modal from \"./Modal/Modal\";\r\nimport Themebutton from \"../../Button/button\";\r\n\r\nconst MoreInfo = (props) => {\r\n  \r\n  const [details, setDetails] = useState({ date: \"\", rules: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [registered, setRegistered] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [registerLoading, setRegisterLoading] = useState(false);\r\n  const [userVerified, setUserVerified] = useState(false)\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  const checkRegistered = () => {\r\n    setRegistered(false);\r\n    props.registeredEvents.forEach((eve) => {\r\n      if (eve._id === id) setRegistered(true);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    checkRegistered();\r\n  }, [id]);\r\n\r\n  const fetchData = async (props) => {\r\n    try {\r\n      const response = await getEventDetails(id);\r\n\r\n      console.log(response.data);\r\n\r\n      if (response.data.ok) {\r\n        setDetails(response.data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      history.push(\"/events\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setRegisterLoading(false);\r\n  };\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setRegisterLoading(false);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    setRegisterLoading(true);\r\n\r\n    if (props.isLoggedIn) {\r\n      // if(details.additionalInfo.required){\r\n      // showPopUp\r\n      // fire modal and recieve the details object\r\n      // }\r\n\r\n      const res = await setRegisteredEvents(id, props.token);\r\n\r\n      if (res.data.ok) {\r\n        props.addToRegistered(res.data.data.event);\r\n        // addToCartSuccess();\r\n        setRegistered(true);\r\n        setRegisterLoading(false);\r\n        setShowModal(false);\r\n      }\r\n      else{\r\n        closeModal();\r\n        // registrationsClosed();\r\n      }\r\n    } else {\r\n      addToCartFail();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"MoreInfo\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"more-info\">\r\n          <Link to=\"/events\">\r\n            <div className=\"back-container\">\r\n              <img src={back2} alt=\"go back\" />\r\n            </div>\r\n          </Link>\r\n\r\n          <div\r\n            className=\"jumbotron text-center py-2\"\r\n            id=\"main-detail\"\r\n          >\r\n            <img className=\"logo\" src={ReactLogo} alt=\"logo\"></img>\r\n\r\n            <h3 className=\"name\">{details.name}</h3>\r\n            <span className> {details.date.substring(0, 10)} </span>\r\n\r\n            <p className=\"lead\">\r\n              This is a simple hero unit, a simple jumbotron-style component for\r\n              calling extra attention to featured content or information.\r\n            </p>\r\n\r\n            <hr className=\"my-1\" />\r\n\r\n            {!registered ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexFlow: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Themebutton\r\n                  onClick={props.isLoggedIn ? openModal : props.openLogin}\r\n                  value=\"Register Now\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <span\r\n                style={{ color: \"blue\", fontWeight: \"bold\", fontSize: \"20px\" }}\r\n              >\r\n                Registered\r\n              </span>\r\n            )}\r\n\r\n            <DetailsTab details={details} />\r\n          </div>\r\n\r\n          <Suggestion suggestions={details.suggestions}></Suggestion>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        showModal={showModal}\r\n        closeModal={closeModal}\r\n        openModal={openModal}\r\n        load={registerLoading}\r\n        handleRegister={handleRegister}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n    isLoggedIn: state.login,\r\n    registeredEvents: state.userData.registeredEvents,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = (dispatch) => {\r\n  return {\r\n    openLogin: () => {\r\n      dispatch(openLogin());\r\n    },\r\n    addToRegistered: (details) => {\r\n      dispatch(addToRegistered(details));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(MoreInfo);\r\n","E:\\amit\\xenia-dashboard\\src\\Components\\Contact\\Contact.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Footer\\Footer.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\WebTeam\\WebTeam.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Profile\\Profile.js",["187","188"],"E:\\amit\\xenia-dashboard\\src\\Components\\SideEvents\\SideEvents.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Sponsors\\Sponsors.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Contact\\FAQ\\FAQ.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\ForgotPassword\\reset.js",["189"],"E:\\amit\\xenia-dashboard\\src\\Components\\ForgotPassword\\forgot.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\AboutUs\\About.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Config\\api\\User.js",[],"E:\\amit\\xenia-dashboard\\src\\Store\\DefaultState.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\Login.js",["190"],"import React, { useState } from \"react\";\r\nimport sendEmail from \"./sendEmail\";\r\nimport './Login.css';\r\n// import axios from \"axios\";\r\nimport validInfo from \"./validInfo\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport astronaut from \"../../Assets/Images/astronaut.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loginFail, loginSuccess } from \"../Notifications/Notification\";\r\nimport { login, getLoggedInUser } from \"../Config/api/User\";\r\nimport Themebutton from '../Button/button';\r\nimport {\r\n  loggedIn,\r\n  storeToken,\r\n  openLogin,\r\n  closeLogin,\r\n  toggleLogin,\r\n} from \"../../Store/Actions\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  if (errors !== null) {\r\n    setTimeout(() => setErrors(null), 5000);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrors(validInfo({ email, password }, false));\r\n    const user = { email, password };\r\n\r\n    if (errors === null) {\r\n      let res = await login(user);\r\n\r\n      if (res.data.ok === true) {\r\n        const token = res.data.data.token;\r\n        res = await getLoggedInUser(token);\r\n\r\n        localStorage.setItem(\"xeniaUserToken\", token);\r\n\r\n        props.loggedIn(res.data.data);\r\n        props.storeToken(token);\r\n\r\n        loginSuccess();\r\n        props.closeLogin();\r\n        // setError(\"\");\r\n      } else {\r\n        loginFail();\r\n        // setError(\"Invalid Credentials\");\r\n      }\r\n\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setErrors(null);\r\n    }\r\n  };\r\n\r\n  const handleHide = () => {\r\n    // if (error === \"Invalid Credentials\") {\r\n    //   return props.closeLogin();\r\n    // } else {\r\n    //   return null;\r\n    // }\r\n  };\r\n\r\n  const forgotPassword = () => {\r\n    sendEmail();\r\n    props.closeLogin();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={props.popLogin}\r\n        onHide={props.closeLogin}\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            paddingLeft: \"50px\",\r\n            background: \"black\",\r\n            color: \"#ffff\",\r\n          }}\r\n          closeButton\r\n        >\r\n          <Modal.Title>\r\n            <div className=\"d-flex flex-column text-center\">\r\n              <img\r\n                alt=\"welcome-back\"\r\n                src={astronaut}\r\n                className=\"img-fluid\"\r\n                style={styles.imageStyles}\r\n              />{\" \"}\r\n              <span\r\n                style={styles.title_text}\r\n                className=\"text-uppercase font-weight-bold\"\r\n              >\r\n                {\" \"}\r\n                Welcome back\r\n              </span>\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ background: \"#131313\", color: \"#ffff\" }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-envelope text-warning\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              {errors !== null && errors.email !== undefined && (\r\n                <span className=\"text-danger pl-5 font-weight-bold\">\r\n                  {`* ${errors.email}`}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-lock text-success\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              {errors !== null && errors.password !== undefined && (\r\n                <span className=\"text-danger pl-5 font-weight-bold\">\r\n                  {`* ${errors.password}`}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"loginButtonNew\">\r\n              <Themebutton\r\n                onClick={handleSubmit}\r\n                value='Login'\r\n              />\r\n            </div>\r\n            <div className=\"text-center my-2\">\r\n              Don't have an account ?{\" \"}\r\n              <span\r\n                style={{ fontWeight: \"bold\", color: \"blue\", cursor: \"pointer\" }}\r\n                onClick={props.toggleLogin}\r\n              >\r\n                Sign Up\r\n              </span>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <Link to=\"/forgot-password\">\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"blue\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={forgotPassword}\r\n                >\r\n                  Forgot Password\r\n                </span>\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  imageStyles: {\r\n    padding: \"5px\",\r\n    height: \"90px\",\r\n    width: \"90px\",\r\n    marginTop: \"-50px\",\r\n    marginLeft: \"150px\",\r\n    borderRadius: \"30px\",\r\n    borderColor: \"white\",\r\n    borderWidth: \"1px\",\r\n  },\r\n  title_text: {\r\n    letterSpacing: \"5px\",\r\n    marginLeft: \"60px\",\r\n    marginTop: \"20px\",\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    popLogin: state.openLogin,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    loggedIn: (userData) => {\r\n      dispatch(loggedIn(userData));\r\n    },\r\n    storeToken: (token) => {\r\n      dispatch(storeToken(token));\r\n    },\r\n    openLogin: () => {\r\n      dispatch(openLogin());\r\n    },\r\n    toggleLogin: () => {\r\n      dispatch(toggleLogin());\r\n    },\r\n    closeLogin: () => {\r\n      dispatch(closeLogin());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\r\n","E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\Register.js",["191"],"import React, { useState } from \"react\";\r\nimport './Register.css';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport validInfo from \"./validInfo\";\r\n// import axios from \"axios\";\r\nimport astronaut from \"../../Assets/Images/astronaut.png\";\r\nimport { register } from \"../Config/api/User\";\r\nimport { connect } from \"react-redux\";\r\nimport Themebutton from '../Button/button';\r\nimport { toggleLogin, openSignUp, closeLogin } from \"../../Store/Actions\";\r\nimport { signUpSuccess, signUpFail } from \"../Notifications/Notification\";\r\n\r\nconst Register = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [college, setCollege] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [errors, setErrors] = useState(null);\r\n  if (errors !== null) {\r\n    setTimeout(() => setErrors(null), 5000);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrors(validInfo({ name, email, password, password2 }));\r\n    if (errors === null) {\r\n      const user = { name, password, college, email, phone };\r\n      const res = await register(user);\r\n\r\n      console.log(res.data);\r\n\r\n      if (res.data.ok) {\r\n        signUpSuccess();\r\n        props.toggleLogin();\r\n      } else {\r\n        signUpFail();\r\n      }\r\n\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setCollege(\"\");\r\n      setPhone(\"\");\r\n      setErrors(null);\r\n    }\r\n  };\r\n\r\n  const handleHide = () => {\r\n    // if (error === \"Invalid Credentials\") {\r\n    //   return props.closeLogin();\r\n    // } else {\r\n    //   return null;\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={props.popSignUp}\r\n        onHide={props.closeLogin}\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            paddingLeft: \"120px\",\r\n            background: \"#131313\",\r\n            color: \"#fff\",\r\n          }}\r\n          closeButton\r\n        >\r\n          <Modal.Title>\r\n            <div className=\"d-flex flex-column text-center\">\r\n              <img\r\n                alt=\"sign-up\"\r\n                src={astronaut}\r\n                className=\"img-fluid\"\r\n                style={styles.imageStyles}\r\n              />{\" \"}\r\n              <span\r\n                style={styles.title_text}\r\n                className=\"text-uppercase font-weight-bold\"\r\n              >\r\n                {\" \"}\r\n                Sign Up\r\n              </span>\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ background: \"#131313\", color: \"#ffff\" }}>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-user\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              {errors !== null && errors.name !== undefined && (\r\n                <span className=\"text-danger pl-5 font-weight-bold\">\r\n                  {`* ${errors.name}`}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-envelope text-warning\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"Email\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              {errors !== null && errors.email !== undefined && (\r\n                <span className=\"text-danger pl-5 font-weight-bold\">\r\n                  {`* ${errors.email}`}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-lock text-success\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              {errors !== null && errors.password !== undefined && (\r\n                <span className=\"text-danger pl-5 font-weight-bold\">\r\n                  {`* ${errors.password}`}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-lock text-success\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"password2\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={password2}\r\n                  onChange={(e) => {\r\n                    setPassword2(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              {errors !== null && errors.password2 !== undefined && (\r\n                <span className=\"text-danger pl-5 font-weight-bold\">\r\n                  {`* ${errors.password2}`}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-phone text-primary\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"phone\"\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  value={phone}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <div className=\"input-group-text\">\r\n                    <i className=\"fa fa-university\"></i>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"college\"\r\n                  type=\"text\"\r\n                  placeholder=\"College\"\r\n                  value={college}\r\n                  onChange={(e) => setCollege(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"signupButtonNew\">\r\n              <Themebutton\r\n                onClick={handleSubmit}\r\n                value='Sign up'\r\n              />\r\n            </div>\r\n            <div className=\"text-center my-2\">\r\n              Already have an account ?{\" \"}\r\n              <span\r\n                style={{ fontWeight: \"bold\", color: \"blue\", cursor: \"pointer\" }}\r\n                onClick={props.toggleLogin}\r\n              >\r\n                Login\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst styles = {\r\n  imageStyles: {\r\n    padding: \"5px\",\r\n    height: \"90px\",\r\n    width: \"90px\",\r\n    marginTop: \"-50px\",\r\n    marginLeft: \"80px\",\r\n    borderRadius: \"30px\",\r\n    borderColor: \"white\",\r\n    borderWidth: \"1px\",\r\n  },\r\n  title_text: {\r\n    letterSpacing: \"5px\",\r\n    marginLeft: \"50px\",\r\n    marginTop: \"20px\",\r\n  },\r\n};\r\n\r\nconst mapSatesToProps = (state) => {\r\n  return {\r\n    popSignUp: state.openSignUp,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    openSignUp: () => {\r\n      dispatch(openSignUp());\r\n    },\r\n    closeLogin: () => {\r\n      dispatch(closeLogin());\r\n    },\r\n    toggleLogin: () => {\r\n      dispatch(toggleLogin());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapSatesToProps, mapActionsToProps)(Register);\r\n","E:\\amit\\xenia-dashboard\\src\\Components\\WebTeam\\TeamProfile.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Registrations\\EventCols\\EventCols.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Config\\config.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Button\\button.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Events\\Cards\\Card.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Loader\\Loader.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\DetailTabs\\DetailsTabs.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Contact\\FAQ\\Question.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\LandingPage\\LandingPageStars\\LandingPageStars.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\LandingPage\\Moon\\Moon.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\Suggestion\\Suggestion.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Events\\MoreInfo\\Modal\\Modal.js",["192","193","194","195"],"import { colors } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './Modal.css';\r\nimport Font from '../../../../Assets/Fonts/PTSans-Bold.ttf'\r\nimport ThemeButton from '../../../Button/button';\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nconst customStyles = {\r\n\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n    },\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        overflow: 'hidden',\r\n        marginRight: '-50%',\r\n        fontFamily: { Font },\r\n        transform: 'translate(-50%, -50%)',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        border: 'none',\r\n        color: 'aqua',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backdropFilter: 'blur(5px)',\r\n    }\r\n};\r\n\r\nconst buttonStyle = {\r\n    color: 'aqua',\r\n    border: 'none',\r\n    fontSize: '20px',\r\n    background: 'black',\r\n    border: '1px solid aqua',\r\n    borderRadius: '30px',\r\n    padding: '10px',\r\n    paddingBlock: '5px',\r\n    fontFamily: { Font },\r\n\r\n    \"&:focus\": {\r\n        outline: 'none',\r\n    },\r\n\r\n    \"&:hover\": {\r\n        transform: 'scale(1.1)',\r\n    },\r\n}\r\n\r\nconst buttonGroup = {\r\n    marginBlock: '20px',\r\n    color: 'blue',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n}\r\n\r\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\n// Modal.setAppElement('#Xenia')\r\n\r\nconst RegisterModal = (props) => {\r\n    var subtitle;\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n    }\r\n\r\n    const recaptchaLoaded = () => {\r\n        console.log(\"recaptch loaded\")\r\n    }\r\n\r\n    return (\r\n        <div className='register-modal'>\r\n\r\n            <Modal\r\n                isOpen={props.showModal}\r\n                onAfterOpen={afterOpenModal}\r\n                onRequestClose={props.closeModal}\r\n                style={customStyles}\r\n            >\r\n\r\n                <h2 ref={_subtitle => (subtitle = _subtitle)}>Confirm Registration</h2>\r\n\r\n                <Recaptcha\r\n                    sitekey=\"xxxxxxxxxxxxxxxxxxxx\"\r\n                    render=\"explicit\"\r\n                    onloadCallback={recaptchaLoaded}\r\n                />\r\n\r\n                <div className='button-group' style={buttonGroup}>\r\n\r\n                    {\r\n                        props.load\r\n                            ?\r\n                            <div class=\"spinner-border text-info aqua\" role=\"status\">\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <ThemeButton onClick={props.closeModal} value='Cancel'></ThemeButton>\r\n                                <ThemeButton onClick={props.handleRegister} value='Register'></ThemeButton>\r\n                            </>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterModal;","E:\\amit\\xenia-dashboard\\src\\Components\\Notifications\\Notification.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Registrations\\RegOpen\\RegOpen.js",[],"E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\sendEmail.js",["196"],"const nodemailer = require(\"nodemailer\");\r\nconst log = console.log;\r\nexport default () => {\r\n  //Nodemailer;\r\n\r\n  // Step 1\r\n  let transporter = nodemailer.createTransport({\r\n    service: \"gmail\",\r\n    auth: {\r\n      user: process.env.EMAIL || \"testnodemailer1001@gmail.com\", // TODO: your gmail account\r\n      pass: process.env.PASSWORD || \"johndoe123\", // TODO: your gmail password\r\n    },\r\n  });\r\n\r\n  // Step 2\r\n  let mailOptions = {\r\n    from: \"testnodemailer1001@gmail.com\", // TODO: email sender\r\n    to: \"gauravshinde1816@gmail.com\", // TODO: email receiver\r\n    subject: \"Nodemailer - Test\",\r\n    text: \"Wooohooo it works!!\",\r\n    html: `\r\n    <!DOCTYPE html>\r\n  <html lang=\"en\">\r\n  \r\n  <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n          integrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\" crossorigin=\"anonymous\">\r\n      <title>PCSB Community</title>\r\n  </head>\r\n  \r\n  <body>\r\n      <div class=\"container text-center border-1\">\r\n          <h1 class=\"display-3\">Forgot password link</h1>\r\n          <hr>\r\n  \r\n          <img class=\"img-responsive mb-3\"\r\n              src=\"\r\n              https://images.unsplash.com/photo-1584433144859-1fc3ab64a957?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTl8fGZvcmdvdCUyMHBhc3N3b3JkfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n              alt=\"\" srcset=\"\">\r\n          <hr>\r\n          <div class=\"btn btn-success btn-lg p-2\">\r\n              <strong>To reset your password</strong> <a href=\"https://www.pictcsi.com/\">click here</a>\r\n          </div>\r\n  \r\n  \r\n      </div>\r\n  \r\n  \r\n  </body>\r\n  \r\n  </html>\r\n    \r\n    `,\r\n  };\r\n\r\n  // Step 3\r\n  transporter.sendMail(mailOptions, (err, data) => {\r\n    if (err) {\r\n      return log(\"Error occurs\", err);\r\n    }\r\n    return log(\"Email sent!!!\");\r\n  });\r\n};\r\n","E:\\amit\\xenia-dashboard\\src\\Components\\Auth\\validInfo.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":45,"column":6,"nodeType":"203","endLine":45,"endColumn":8,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":13},{"ruleId":"205","severity":1,"message":"209","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":17},{"ruleId":"205","severity":1,"message":"210","line":12,"column":25,"nodeType":"207","messageId":"208","endLine":12,"endColumn":44},{"ruleId":"205","severity":1,"message":"211","line":23,"column":10,"nodeType":"207","messageId":"208","endLine":23,"endColumn":22},{"ruleId":"205","severity":1,"message":"212","line":23,"column":24,"nodeType":"207","messageId":"208","endLine":23,"endColumn":39},{"ruleId":"201","severity":1,"message":"213","line":38,"column":6,"nodeType":"203","endLine":38,"endColumn":10,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":25,"column":23,"nodeType":"217","messageId":"218","endLine":25,"endColumn":25},{"ruleId":"215","severity":1,"message":"219","line":26,"column":26,"nodeType":"217","messageId":"218","endLine":26,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":87,"column":33,"nodeType":"222","endLine":87,"endColumn":51},{"ruleId":"205","severity":1,"message":"223","line":61,"column":9,"nodeType":"207","messageId":"208","endLine":61,"endColumn":19},{"ruleId":"205","severity":1,"message":"223","line":49,"column":9,"nodeType":"207","messageId":"208","endLine":49,"endColumn":19},{"ruleId":"205","severity":1,"message":"224","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":16},{"ruleId":"205","severity":1,"message":"225","line":39,"column":7,"nodeType":"207","messageId":"208","endLine":39,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":44,"column":5,"nodeType":"228","messageId":"218","endLine":44,"endColumn":11},{"ruleId":"205","severity":1,"message":"229","line":91,"column":40,"nodeType":"207","messageId":"208","endLine":91,"endColumn":48},{"ruleId":"230","severity":1,"message":"231","line":3,"column":1,"nodeType":"232","endLine":65,"endColumn":3},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["235"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'registrationsClosed' is defined but never used.","'userVerified' is assigned a value but never used.","'setUserVerified' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkRegistered' and 'fetchData'. Either include them or remove the dependency array.",["236"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleHide' is assigned a value but never used.","'colors' is defined but never used.","'buttonStyle' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","'subtitle' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [props]",{"range":"241","text":"242"},"Update the dependencies array to be: [checkRegistered, fetchData, id]",{"range":"243","text":"244"},[1733,1735],"[props]",[1465,1469],"[checkRegistered, fetchData, id]"]